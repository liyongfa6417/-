#ifndef __MYIIC_H
#define __MYIIC_H
#include "sys.h"							  
//////////////////////////////////////////////////////////////////////////////////
#define IIC_1_ENABLE         1
#define IIC_2_ENABLE         0

// //IO方向设置
// #define IIC_2_ENABLE
// #define SDA_IN()  {GPIOB->CRH&=0XFFFF0FFF;GPIOB->CRH|=8<<12;}
// #define SDA_OUT() {GPIOB->CRH&=0XFFFF0FFF;GPIOB->CRH|=3<<12;}

// //IO操作函数	 
// #define IIC_SCL    PBout(10) //SCL
// #define IIC_SDA    PBout(11) //SDA	 
// #define READ_SDA   PBin(11)  //输入SDA 

// #endif

#if IIC_1_ENABLE

#define SDA_IN()  {GPIOB->CRL&=0X0FFFFFFF;GPIOB->CRL|=0x80000000;}
#define SDA_OUT() {GPIOB->CRL&=0X0FFFFFFF;GPIOB->CRL|=0x30000000;}

//IO操作函数	 
#define IIC_SCL    PBout(6) //SCL
#define IIC_SDA    PBout(7) //SDA	 
#define READ_SDA   PBin(7)  //输入SDA 

#endif


//IIC所有操作函数
void IIC_Init(void);            //初始化IIC的IO口				 
void IIC_Start(void);				    //发送IIC开始信号
void IIC_Stop(void);	  			  //发送IIC停止信号
void IIC_Send_Byte(u8 txd);			//IIC发送一个字节
u8 IIC_Read_Byte(unsigned char ack);//IIC读取一个字节
u8 IIC_Wait_Ack(void); 				  //IIC等待ACK信号
void IIC_Ack(void);					    //IIC发送ACK信号
void IIC_NAck(void);				    //IIC不发送ACK信号

void IIC_Write_One_Byte(u8 daddr,u8 addr,u8 data);
u8 IIC_Read_One_Byte(u8 daddr,u8 addr);	  
#endif
















